{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/spinner/Spinner.js","service/MarvelService.js","hooks/http.hook.js","components/appHeader/AppHeader.js","components/pages/CharactersByName.js","components/app/App.js","index.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/404.js","components/pages/SingleComicPage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/form/Form.js","components/pages/MainPage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_APIBASE","_APIKEY","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","getCharacterName","name","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","AppHeader","className","to","end","color","isActive","View","Helmet","content","CharactersByName","charId","useParams","setName","useEffect","updateName","then","onCharLoaded","errorMessage","spinner","AppBanner","Page404","lazy","MainPage","ComicsPage","SingleComicPage","App","fallback","element","ReactDOM","render","StrictMode","document","getElementById","avengers","avengersLogo","comic","comicId","setComic","updateComic","onComicLoaded","imgStyle","href","RandomChar","props","setChar","updateChar","Math","floor","random","onClick","mjolnir","CharList","charList","setcharList","newItemLoading","setItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemsRefs","useRef","arr","item","i","CSSTransition","timeout","classNames","ref","el","current","onCharSelected","forEach","classList","remove","add","focus","TransitionGroup","component","renderItems","disabled","Skeleton","CharInfo","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","CustomForm","loadedName","result","initialValues","charName","validationSchema","Yup","required","onSubmit","names","htmlFor","placeholder","selectedChar","decoration","ComicsList","comicsList","setComicsList","setnewItemLoading","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList"],"mappings":"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","file":"static/js/main.e5331d52.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService=()=>{\r\n    const {loading,request,error,clearError}=useHttp()\r\n\r\n    const _APIBASE = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _APIKEY = 'apikey=10eea6a8fe08f0658ffaad79e1d3c638';\r\n    const _BASEOFFSET=210;\r\n\r\n    const getAllCharacters = async(offset=_BASEOFFSET) => {\r\n       const res=await request(`${_APIBASE}characters?limit=9&offset=${offset}&${_APIKEY}`);\r\n       return res.data.results.map(_transformCharacter)\r\n    }\r\n    const getCharacter = async (id) => {\r\n        const res= await request(`${_APIBASE}characters/${id}?&${_APIKEY}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n    const getAllComics=async(offset = 0)=>{\r\n        const res= await request(`${_APIBASE}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_APIKEY}`);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n    const getComic = async (id) => {\r\n        const res= await request(`${_APIBASE}comics/${id}?&${_APIKEY}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n    const getCharacterName=async(name)=>{\r\n        const res = await request(`${_APIBASE}characters?name=${name}&${_APIKEY}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n \r\n    const _transformCharacter=(char)=>{\r\n        return {\r\n            id:char.id,\r\n            name:char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail:char.thumbnail.path+'.'+char.thumbnail.extension ,\r\n            homepage:char.urls[0].url,\r\n            wiki:char.urls[1].url,\r\n            comics:char.comics.items\r\n        }\r\n    }\r\n    const  _transformComics=(comics)=>{\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || ' No description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n        }\r\n    }\r\n    return {loading,error,getAllCharacters,getCharacter,getComic,clearError,getAllComics,getCharacterName}\r\n}\r\nexport default useMarvelService;","import {useState,useCallback} from \"react\";\r\n\r\nexport const useHttp =()=>{\r\n    const [loading,setLoading]=useState(false);\r\n    const [error,setError]=useState(null);\r\n\r\n    const request=useCallback(async(url,method='GET',body=null,headers={'Content-Type':'application/json'})=>\r\n    {\r\n            setLoading(true);\r\n        try{\r\n            const response=await fetch(url,{method,body,headers});\r\n\r\n            if (!response.ok){\r\n                throw new Error(`Could not fetch ${url},status:${response.status}`)\r\n            }\r\n\r\n            const data=await response.json();\r\n            setLoading(false);\r\n            return data;\r\n\r\n        }catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    },[])\r\n\r\n    const clearError=useCallback(()=>setError(null),[]);\r\n    return {loading, request , error , clearError}\r\n}","import { Link ,NavLink} from 'react-router-dom';\r\nimport './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <Link to=\"/\">\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><NavLink  \r\n                            end \r\n                            style={({isActive})=>({color : isActive? '#9f0013':'inherit'})}\r\n                            to=\"/\">Characters</NavLink></li>\r\n                    /\r\n                    <li><NavLink\r\n                     \r\n                        style={({isActive})=>({color : isActive? '#9f0013':'inherit'})}\r\n                        to=\"/comics\" >Comics</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import {useParams,Link} from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport useMarvelService from '../../service/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport './singleComicPage.scss';\r\n\r\nconst CharactersByName=()=>{\r\n    const {charId}=useParams();\r\n    const [char,setName]=useState(null);\r\n\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(()=>{\r\n        updateName()\r\n    },[charId])\r\n    \r\n    const updateName =()=>{\r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n    const onCharLoaded=(char)=>{\r\n        setName(char);\r\n    }\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\nconst View=({char})=>{\r\n    const {name, description, thumbnail}=char\r\n    \r\n    return (\r\n    <div className=\"single-comic\">\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`${name} characters`}/>\r\n                <title>{name}</title>\r\n            </Helmet>\r\n        <img src={thumbnail} alt={name} className=\"single-comic__img\"/>\r\n        <div className=\"single-comic__info\">\r\n            <h2 className=\"single-comic__name\">{name}</h2>\r\n            <p className=\"single-comic__descr\">{description}</p>\r\n        </div>\r\n        <Link to=\"/\" className=\"single-comic__back\">Back to characters</Link>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CharactersByName;","import { lazy,Suspense } from \"react\";\r\nimport {BrowserRouter as Router,Route,Routes} from \"react-router-dom\";\r\n\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport { CharactersByName } from \"../pages\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nconst Page404=lazy(()=>import('../pages/404'));\r\nconst MainPage=lazy(()=>import('../pages/MainPage'));\r\nconst ComicsPage=lazy(()=>import('../pages/ComicsPage'))\r\nconst SingleComicPage=lazy(()=>import('../pages/SingleComicPage'))\r\n\r\n\r\nconst App = ()=> {\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <main>\r\n               <Suspense fallback={<span><Spinner/></span>}>\r\n               <Routes>\r\n                   <Route path=\"/\" element={<MainPage/>}/>\r\n                   <Route path=\"/comics\" element={<ComicsPage/>}/>\r\n                   <Route path=\"/comics/:comicId\" element={<SingleComicPage/>}/>\r\n                   <Route path=\"/characters/:charId\" element={<CharactersByName/>}/>\r\n                   <Route path=\"*\" element={<Page404/>}/>\r\n                </Routes>\r\n               </Suspense>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n        )\r\n    \r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Page404=()=>{\r\n    return (\r\n        <div>\r\n            <ErrorMessage/>\r\n            <p style={{'textAlign':'center','fontWeight':'bold','fontSize':'24px'}}>Page doeesn't exist</p>\r\n            <Link style={{'display':'block','textAlign':'center','fontWeight':'bold','fontSize':'24px',\r\n            'marginTop':'30px'}} to=\"/\">Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import {useParams,Link} from 'react-router-dom';\r\nimport {Helmet} from \"react-helmet\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../service/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './singleComicPage.scss';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic()\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount, thumbnail, language, price} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`${title} comics book`}/>\r\n                <title>{title}</title>\r\n            </Helmet>\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState,useEffect } from 'react';\r\nimport './randomChar.scss';\r\n\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport useMarvelService from '../../service/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nconst RandomChar =(props)=>{\r\n  \r\n    const [char ,setChar]= useState({});\r\n    const {loading,error,getCharacter,clearError}=useMarvelService();\r\n\r\n    useEffect(()=>{\r\n        updateChar()\r\n    },[])\r\n\r\n    const onCharLoaded=(char)=>{\r\n        setChar(char);\r\n    }\r\n    \r\n    const updateChar=()=>{\r\n        clearError();\r\n        const id=Math.floor(Math.random()*(1011400-1011000) + 1011000)\r\n        getCharacter(id)\r\n             .then(onCharLoaded)\r\n    }\r\n\r\n    const errorMessage=error? <ErrorMessage/>:null;\r\n    const spinner=loading ?<Spinner/>:null;\r\n    const content=!(loading || error) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button  onClick ={updateChar}className=\"button button__main\">\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nconst View=({char})=>{\r\n\r\n    const {name,description,thumbnail,homepage,wiki} = char;\r\n    let imgStyle={'object-fit': 'cover'};\r\n        if (thumbnail==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\r\n            imgStyle={'object-fit': 'contain'}\r\n        }\r\n\r\n    return(\r\n        <div className=\"randomchar__block\">\r\n                    <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n                    <div className=\"randomchar__info\">\r\n                        <p className=\"randomchar__name\">{name}</p>\r\n                        <p className=\"randomchar__descr\">\r\n                           {description}\r\n                        </p>\r\n                        <div className=\"randomchar__btns\">\r\n                            <a href={homepage} className=\"button button__main\">\r\n                                <div className=\"inner\">homepage</div>\r\n                            </a>\r\n                            <a href={wiki}className=\"button button__secondary\">\r\n                                <div className=\"inner\">Wiki</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import {useState,useEffect,useRef} from 'react';\r\n\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport useMarvelService from '../../service/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport './charList.scss';\r\n\r\nconst  CharList=(props)=> {\r\n    const [charList,setcharList]=useState([]);\r\n    const [newItemLoading,setItemLoading]=useState(false);\r\n    const [offset,setOffset]=useState(210);\r\n    const [charEnded,setCharEnded]=useState(false)\r\n\r\n    const {loading,error,getAllCharacters}=useMarvelService();\r\n\r\n    useEffect(()=>{\r\n        onRequest(offset,true)\r\n    },[])\r\n   \r\n    const onRequest = (offset,initial) => {\r\n        initial ? setItemLoading(false) : setItemLoading(true)\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n    }\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setcharList(charList=>[...charList, ...newCharList]);\r\n        setItemLoading(newItemLoading => false);\r\n        setOffset(offset=>offset + 9);\r\n        setCharEnded(ended)\r\n\r\n    }\r\n\r\n\r\n    const itemsRefs=useRef([]);\r\n\r\n    const onFocusCards=(id)=>{\r\n    itemsRefs.current.forEach(item=>item.classList.remove('char__item_selected'));\r\n    itemsRefs.current[id].classList.add('char__item_selected');\r\n    itemsRefs.current[id].focus()\r\n\r\n   }\r\n\r\n   function  renderItems(arr) {\r\n        const items =  arr.map((item,i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            \r\n            return (\r\n               <CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\r\n                 <li \r\n                    className=\"char__item\"\r\n                    key={item.id}\r\n                    ref={el=>itemsRefs.current[i]=el}\r\n                    onClick={() => {\r\n                        props.onCharSelected(item.id)\r\n                        onFocusCards(i)\r\n                     }}>\r\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n               </CSSTransition>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                 <TransitionGroup component={null}>\r\n                    {items}\r\n                </TransitionGroup>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n     \r\n        \r\n    const items = renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{'display': charEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nCharList.propTypes={\r\n    onCharSelected:PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect } from 'react';\r\n\r\nimport './charInfo.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../service/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\n\r\nconst CharInfo =(props)=>{\r\n\r\n    const [char,setChar]=useState(null); \r\n    const {loading,error,getCharacter,clearError}=useMarvelService();\r\n    useEffect(()=>{\r\n        updateChar()\r\n    },[props.charId])\r\n\r\n    const updateChar=()=>{\r\n        const {charId}=props;\r\n        if(!charId){\r\n            return;\r\n        }\r\n        \r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n    const onCharLoaded=(char)=>{\r\n        setChar(char);\r\n    }\r\n\r\n    const skeleton=char|| loading || error? null: <Skeleton/>;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error ||!char) ? <View char={char}/>:null;\r\n    \r\n    return (\r\n    <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n    </div> )\r\n}\r\nconst View=({char})=>{\r\n    const {name,description,thumbnail,homepage,wiki,comics}=char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n    return(\r\n    <>\r\n        <div className=\"char__basics\">\r\n            <img src={thumbnail} alt={name} style={imgStyle}/>\r\n            <div>\r\n                <div className=\"char__info-name\">{name}</div>\r\n                <div className=\"char__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"char__descr\">\r\n           {description}\r\n        </div>\r\n        <div className=\"char__comics\">Comics:</div>\r\n        <ul className=\"char__comics-list\">\r\n        {comics.length > 0 ? null : 'There is no comics with this character'}\r\n             {\r\n                comics.map((item,i)=>{\r\n                    if (i > 9) return;\r\n                    return (\r\n                        <li className=\"char__comics-item\" key={i} >\r\n                            <Link to={`/comics/${i}`} >\r\n                                {item.name}\r\n                            </Link>   \r\n                        </li>\r\n                    )\r\n                })\r\n             }\r\n        </ul>\r\n    </>\r\n    )\r\n}\r\nCharInfo.propTypes={\r\n    charId:PropTypes.number\r\n}\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    state={\r\n        error:false\r\n    }\r\n\r\n    componentDidCatch(error,errorInfo){\r\n        console.log(error,errorInfo);\r\n        this.setState({\r\n            error:true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if (this.state.error){\r\n            <ErrorMessage/>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import './form.scss';\r\nimport {useState} from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport useMarvelService from '../../service/MarvelService';\r\nimport *as Yup from \"yup\"\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst CustomForm=()=>{\r\n    const [name ,setName]=useState(null)\r\n    const {loading, error, getCharacterName,clearError} = useMarvelService();\r\n    \r\n    const loadedName=(name)=>{\r\n        setName(name);\r\n    }\r\n\r\n    const updateName=(names)=>{\r\n        clearError();\r\n        getCharacterName(names)\r\n            .then(loadedName)\r\n    }\r\n    const errorMessage=error?<ErrorMessage />:null;\r\n    const result=!name ? null:name.length>0 ?\r\n                <div className=\"char__search-wrapper\">\r\n                    <div className=\"char__search-success\">There is! Visit {name[0].name} page?</div>\r\n                    <Link to={`/characters/${name[0].id}`} className=\"button button__secondary\">\r\n                        <div className=\"inner\" >To page</div>\r\n                    </Link>\r\n                </div> : \r\n                    <div className=\"char__search-error\">\r\n                        The character was not found. Check the name and try again\r\n                    </div>\r\n\r\n    return (\r\n        <div className=\"char__search-form\">\r\n        <Formik \r\n            initialValues={{\r\n                charName:'',\r\n            }}\r\n            validationSchema={Yup.object({\r\n                charName:Yup.string()\r\n                        .required('This field is required!')\r\n            })}\r\n            onSubmit={({charName})=>{\r\n                updateName(charName)\r\n            }}>\r\n        <Form>\r\n            <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n                    <div className=\"char__search-wrapper\">\r\n                        <Field \r\n                            id=\"charName\" \r\n                            name='charName' \r\n                            type='text' \r\n                            placeholder=\"Enter name\"/>\r\n                       \r\n                        <button \r\n                            type='submit' \r\n                            className=\"button button__main\"\r\n                            disabled={loading}>\r\n                            <div className=\"inner\">find</div>\r\n                        </button>\r\n                    </div> \r\n                    <ErrorMessage className=\"char__search-critical-error\" name='charName' component='div'/>\r\n            </Form>\r\n        </Formik>\r\n        {result}\r\n        {errorMessage}\r\n        </div>\r\n    )\r\n }\r\n   \r\nexport default CustomForm;","import { useState } from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from '../../resources/img/vision.png';\r\nimport CustomForm from \"../form/Form\";\r\n\r\nconst MainPage=()=>{\r\n    const [selectedChar,setChar]=useState(null)\r\n\r\n    const onCharSelected=(id)=>{\r\n        setChar(id) \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                 <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <CharList onCharSelected={onCharSelected}/>\r\n               <div>\r\n               <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>   \r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CustomForm/>\r\n                </ErrorBoundary>\r\n               </div>\r\n               \r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\nexport default MainPage;","import './comicsList.scss';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport {useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport useMarvelService from '../../service/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setnewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList([...comicsList, ...newComicsList]);\r\n        setnewItemLoading(false);\r\n        setOffset(offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    function renderItems (arr) {\r\n        const items = arr.map((item, i) => {\r\n            return (\r\n                <CSSTransition  key={item.id} timeout={500} classNames=\"comics__item\">\r\n                    <li className=\"comics__item\" key={i}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                    </li>\r\n                </CSSTransition>\r\n           \r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                <TransitionGroup component={null}>\r\n                {items}\r\n                </TransitionGroup>  \r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n                disabled={newItemLoading} \r\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\r\n                className=\"button button__main button__long\"\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import {Helmet} from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage=()=>{\r\n     return (\r\n        <>\r\n        <Helmet>\r\n            <meta\r\n                name=\"description\"\r\n                content=\"Page with list of our comics\"/>\r\n            <title>Comics page</title>\r\n        </Helmet>\r\n        <AppBanner/>\r\n        <ComicsList/>\r\n        </>\r\n     )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}